// *** GENERATED BY PRISMIX :: DO NOT EDIT ***
datasource db {
	provider = "postgresql"
	url = env("DATABASE_URL")
}
generator client {
	provider = "prisma-client-js"
}
model User {
	uuid String @unique @default(uuid())
	username String @unique
	password String 
	lastName String 
	firstName String 
	middleName String? 
	contactEmail String 
	contactNumber String 
	profileGender Gender? 
	profileBirthday DateTime? 
	profileCivilStatus CivilStatus? 
	profileNationality Nationality? 
	profileAddress String? 
	educationLevel Education? 
	educationCourse String? 
	educationYearStart Int? 
	educationYearGraduate Int? 
	educationSchool String? 
	workRole WorkRole 
	workDepartment Department 
	workTitle String 
	workCode String? 
	workEmploymentType EmploymentType 
	workHireDate DateTime 
	training Training[] @relation(name: "TrainingToUser")
	emergencyContact EmergencyContact[] @relation(name: "EmergencyContactToUser")
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
	time Time[] @relation(name: "TimeToUser")
	event Event[] @relation(name: "EventToUser")
	schedule Schedule[] @relation(name: "ScheduleToUser")
	@@unique([firstName, lastName])
	@@map("users")
}
model Training {
	uuid String @unique @default(uuid())
	name String 
	date DateTime 
	instructor String 
	nature String 
	User User? @relation(name: "TrainingToUser", fields: [userUuid], references: [uuid])
	userUuid String? 
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
	@@map("trainings")
}
model EmergencyContact {
	uuid String @unique @default(uuid())
	lastName String 
	firstName String 
	middleName String? 
	contactNumber String 
	contactEmail String 
	relationship String 
	User User? @relation(name: "EmergencyContactToUser", fields: [userUuid], references: [uuid])
	userUuid String? 
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
	@@map("emergencycontacts")
}
model Admin {
	uuid String @unique @default(uuid())
	username String @unique
	email String @unique
	password String 
	lastName String 
	firstName String 
	middleName String 
	@@unique([username, email])
	@@unique([lastName, firstName, middleName])
	@@map("admins")
}
model Time {
	id String @unique @default(uuid())
	date String 
	remark String? 
	timeInAm DateTime? 
	timeOutAm DateTime? 
	timeInPm DateTime? 
	timeOutPm DateTime? 
	hoursWorkedAm Int @default(0)
	hoursWorkedPm Int @default(0)
	createdAt DateTime @default(now())
	updatedat DateTime @updatedAt
	user User @relation(name: "TimeToUser", fields: [userId], references: [uuid], onDelete: Cascade)
	userId String 
	@@map("times")
}
model Event {
	id String @unique @default(uuid())
	title String 
	description String? 
	allDay Boolean 
	start DateTime 
	end DateTime? 
	User User? @relation(name: "EventToUser", fields: [userUuid], references: [uuid])
	userUuid String? 
	@@map("events")
}
model Schedule {
	id String @unique @default(uuid())
	title String 
	description String? 
	scheduleType ScheduleType 
	start DateTime 
	end DateTime? 
	allDay Boolean 
	User User? @relation(name: "ScheduleToUser", fields: [userUuid], references: [uuid])
	userUuid String? 
}
enum WorkRole {
	EMPLOYEE
	INTERN
}
enum Gender {
	Female
	Male
	PreferNotToSay
}
enum CivilStatus {
	Single
	Married
	Separated
	Widowed
	Annuled
	Divorced
}
enum Nationality {
	Afghan
	Albanian
	Algerian
	American
	Andorran
	Angolan
	Antiguans
	Argentinean
	Armenian
	Australian
	Austrian
	Azerbaijani
	Bahamian
	Bahraini
	Bangladeshi
	Barbadian
	Barbudans
	Batswana
	Belarusian
	Belgian
	Belizean
	Beninese
	Bhutanese
	Bolivian
	Bosnian
	Brazilian
	British
	Bruneian
	Bulgarian
	Burkinabe
	Burmese
	Burundian
	Cambodian
	Cameroonian
	Canadian
	CapeVerdean
	CentralAfrican
	Chadian
	Chilean
	Chinese
	Colombian
	Comoran
	Congolese
	CostaRican
	Croatian
	Cuban
	Cypriot
	Czech
	Danish
	Djibouti
	Dominican
	Dutch
	EastTimorese
	Ecuadorean
	Egyptian
	Emirian
	EquatorialGuinean
	Eritrean
	Estonian
	Ethiopian
	Fijian
	Filipino
	Finnish
	French
	Gabonese
	Gambian
	Georgian
	German
	Ghanaian
	Greek
	Grenadian
	Guatemalan
	GuineaBissauan
	Guinean
	Guyanese
	Haitian
	Herzegovinian
	Honduran
	Hungarian
	IKiribati
	Icelander
	Indian
	Indonesian
	Iranian
	Iraqi
	Irish
	Israeli
	Italian
	Ivorian
	Jamaican
	Japanese
	Jordanian
	Kazakhstani
	Kenyan
	KittianAndNevisian
	Kuwaiti
	Kyrgyz
	Laotian
	Latvian
	Lebanese
	Liberian
	Libyan
	Liechtensteiner
	Lithuanian
	Luxembourger
	Macedonian
	Malagasy
	Malawian
	Malaysian
	Maldivian
	Malian
	Maltese
	Marshallese
	Mauritanian
	Mauritian
	Mexican
	Micronesian
	Moldovan
	Monacan
	Mongolian
	Moroccan
	Mosotho
	Motswana
	Mozambican
	Namibian
	Nauruan
	Nepalese
	NewZealander
	NiVanuatu
	Nicaraguan
	Nigerian
	Nigerien
	NorthKorean
	NorthernIrish
	Norwegian
	Omani
	Pakistani
	Palauan
	Panamanian
	PapuaNewGuinean
	Paraguayan
	Peruvian
	Polish
	Portuguese
	Qatari
	Romanian
	Russian
	Rwandan
	SaintLucian
	Salvadoran
	Samoan
	SanMarinese
	SaoTomean
	Saudi
	Scottish
	Senegalese
	Serbian
	Seychellois
	SierraLeonean
	Singaporean
	Slovakian
	Slovenian
	SolomonIslander
	Somali
	SouthAfrican
	SouthKorean
	Spanish
	SriLankan
	Sudanese
	Surinamer
	Swazi
	Swedish
	Swiss
	Syrian
	Taiwanese
	Tajik
	Tanzanian
	Thai
	Togolese
	Tongan
	TrinidadianOrTobagonian
	Tunisian
	Turkish
	Tuvaluan
	Ugandan
	Ukrainian
	Uruguayan
	Uzbekistani
	Venezuelan
	Vietnamese
	Welsh
	Yemenite
	Zambian
	Zimbabwean
}
enum Education {
	Primary
	Secondary
	JuniorHighSchool
	SeniorHighSchool
	College
}
enum Department {
	ADMIN
	DEVOPS
	FINANCE
	HRADMIN
	MARKETING
	MOBILEDEV
	SOCIAL
	WEBDEV
}
enum EmploymentType {
	FULLTIME
	PARTTIME
	ONCALL
}
enum ScheduleType {
	LvAnnual
	LvSick
	LvParental
	LvBereaved
	LvPaid
	LvUnpaid
	LvSpecial
	LvMedical
	LvStudy
	LvOther
	ObConference
	ObBusinessMeeting
	ObClientMeeting
	ObSiteVisit
	ObContract
	ObTraining
	ObPresentation
	ObOther
	OVERTIME
	UNDERTIME
}